global:
  imagePullPolicy: Always
  vault:
   host: ip
   name: vault
   vaultToken: someToken

frontend:
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  service:
    port: 80
  ingress:
    host: wurt83ow.students-projects.ru
    path: /
    pathType: Prefix
  containerPort: 80
  image: wurt83ow/sausage-frontend
  image_tag: latest
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "250m"
  nginxConf: nginx.conf

backend:
  annotations:
    path: /actuator/prometheus
    port: "8080"
    scrape: "true"
  env:
    reportPath: /logs/reports
    logPath: /logs
  service:
    port: 8080
  revisionHistoryLimit: 15
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  image: wurt83ow/sausage-backend
  image_tag: latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: "256Mi"
      cpu: "25m"
    limits:
      memory: "512Mi"
      cpu: "25m"
  containerPort: 8080
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    timeoutSeconds: 5 
  vpa:
    updatePolicy:
      updateMode: "Recreate"
    resourcePolicy:
      containerPolicies:
        - containerName: "*"
          minAllowed:
            cpu: "10m"
            memory: "128Mi"
          maxAllowed:
            cpu: "100m"
            memory: "1Gi"


backend-report:  
  revisionHistoryLimit: 10
  replicas: 1
  strategy:
    type: Recreate
  service:
    port: 8080
  image: wurt83ow/sausage-backend-report
  image_tag: latest
  imagePullPolicy: Always
  resources:
    limits:
      cpu: "300m"
      memory: "600Mi"
    requests:
      cpu: "150m"
      memory: "300Mi"

  containerPort: 8080
  service:
    port: 8080
  livenessProbe:
    httpGet:
      path: /api/v1/health
      port: 8080
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3
  hpa:
    minReplicas: 1
    maxReplicas: 5
    averageUtilization: 75

infra:
  postgres:
    env:
      PGSQL_USERNAME: pguser
      PGSQL_PASSWORD: pgpassword
      PGSQL_DB: sausage-store
    containerPort: 5432
  mongodb:
    env:
      MONGO_INITDB_ROOT_USERNAME: mgroot
      MONGO_INITDB_ROOT_PASSWORD: mgrootpassword
      MONGO_INITDB_DATABASE: sausage-store
    containerPort: 27017
